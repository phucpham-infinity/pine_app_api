"use strict";var t=require("express"),e=require("cors"),r=require("helmet"),s=require("morgan"),o=require("dotenv"),n=require("mongoose"),a=require("jsonwebtoken"),i=require("zod"),u=require("bcryptjs"),c=require("lodash"),d=require("path");function p(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(r){if("default"!==r){var s=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(e,r,s.get?s:{enumerable:!0,get:function(){return t[r]}})}})),e.default=t,Object.freeze(e)}p(o).config();const y=t=>{var e;return null===(e=process.env)||void 0===e?void 0:e[t]},l=t=>new n.Schema({...t,createdAt:{type:Date,default:new Date},updatedAt:{type:Date,default:new Date}}),m=t=>(e,r,s)=>{try{t.parse({body:e.body,query:e.query,params:e.params}),s()}catch(t){return r.status(400).json({status:400,error:t.issues})}},b=(t,e,r)=>{var s;const o=null===(s=t.header("Authorization"))||void 0===s?void 0:s.replace("Bearer ","");if(!o)return e.status(403).json({status:403,error:"A token is required for authentication"});try{const e=a.verify(o,process.env.TOKEN_SECRET||"MICRO_APP");t.user=e}catch(t){return e.status(401).json({status:401,error:"Invalid Token"})}return r()},g=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),f=i.z.object({body:i.z.object({phone:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),j=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string()})}),v=l({phone:{type:String,required:!0,unique:!0},isUseFaceId:{type:Boolean,required:!1},isUseTouchId:{type:Boolean,required:!1},password:{type:String,required:!0}});v.method("doc",(function(){return c.omit(this._doc,["password"])})),v.pre("save",(function(t){var e=this;if(!e.isModified("password"))return t();u.genSalt(10,(function(r,s){if(r)return t(r);u.hash(e.password,s,(function(r,s){if(r)return t(r);e.password=s,t()}))}))})),v.method("comparePassword",(function(t,e){u.compare(t,this.password,(function(t,r){if(t)return e(t,!1);e(null,r)}))})),v.method("generateToken",(function(){return a.sign(this.doc(),process.env.MICRO_APP||"MICRO_APP",{expiresIn:"30d"})}));var N=n.model("User",v);const z=n.Types.ObjectId,h="/user/register",w="/user/login-with-phone",I="/user/me",q="/user",_="/user/update-by-phone",S="/user/phone/:phone",O="/user/:id",k="/change/pin",T="/change/phone",A=t.Router();A.route(h).post([m(g),async(t,e)=>{const{phone:r,password:s,isUseFaceId:o=!1,isUseTouchId:n=!1}=t.body,a=new N({password:s,phone:r,isUseFaceId:o,isUseTouchId:n});try{const t=await a.save();return e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}})}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(w).post([m(j),async(t,e)=>{const{password:r,phone:s}=(null==t?void 0:t.body)||{};try{const t=await N.findOne({phone:s});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(r,((r,s)=>r?e.status(400).json({status:400,error:r.message}):s?e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}}):e.status(400).json({status:400,error:"Password not match!"})))}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(I).get([b,async(t,e)=>{const{_id:r}=t.user||{},s=new z(r),o=await N.aggregate([{$lookup:{from:"userprofilerefs",localField:"_id",foreignField:"userId",as:"profile"}},{$lookup:{from:"profiles",localField:"profile.profileId",foreignField:"_id",as:"profile"}},{$unwind:{path:"$profile",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"usercompanyrefs",localField:"_id",foreignField:"userId",as:"company"}},{$lookup:{from:"companies",localField:"company.companyId",foreignField:"_id",as:"company"}},{$unwind:{path:"$company",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"requestcompanies",localField:"_id",foreignField:"userId",as:"requestCompany"}},{$unwind:{path:"$requestCompany",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"userraterefs",localField:"_id",foreignField:"userId",as:"rate"}},{$unwind:{path:"$rate",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"settings",localField:"_id",foreignField:"userId",as:"setting"}},{$unwind:{path:"$setting",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"accounts",localField:"_id",foreignField:"userId",as:"accounts"}},{$unwind:{path:"$profile.rate",preserveNullAndEmptyArrays:!0}},{$match:{_id:s}}]);return o?e.status(200).json({status:"ok",data:c.omit(null==o?void 0:o[0],["password","__v"])}):e.status(400).json({status:400,error:"User not found!"})}]),A.route(S).get([async(t,e)=>{const{phone:r}=t.params||{};try{const t=await N.findOne({phone:r});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"User not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(_).post([m(f),async(t,e)=>{const{isUseFaceId:r,isUseTouchId:s,phone:o}=t.body;try{const t=await N.findOneAndUpdate({phone:o},{$set:{isUseFaceId:r,isUseTouchId:s}},{new:!0});return t||e.status(400).json({status:400,error:"User not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(q).get([b,async(t,e)=>{try{const t=await N.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(O).get([b,async(t,e)=>{const{id:r}=t.params;try{const t=await N.findById(r);return c.isEmpty(t)?e.status(400).json({status:400,error:"User not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(k).post([b,async(t,e)=>{const{password:r,newPassword:s}=(null==t?void 0:t.body)||{},{_id:o}=t.user||{};try{const t=await N.findById(o);if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(r,(async(r,o)=>{if(r)return e.status(400).json({status:400,error:r.message});if(!o)return e.status(400).json({status:400,error:"Password not match!"});t.password=s;const n=await t.save();return e.status(200).json({status:"ok",data:null==n?void 0:n.doc()})}))}catch(t){return e.status(400).json({status:400,error:t})}}]),A.route(T).post([b,async(t,e)=>{const{newPhone:r}=(null==t?void 0:t.body)||{},{phone:s}=t.user||{};try{const t=await N.findOne({phone:s});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.phone=r;const o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const D=t.Router();D.route("/ping").get(((t,e)=>{e.json({data:"pong",env:y("DB_URL")})}));const E=i.z.object({body:i.z.object({businessActivity:i.z.string(),companyName:i.z.string(),email:i.z.string(),legalType:i.z.string(),numberOfEmployees:i.z.number(),licenseNumber:i.z.string().optional(),backupEmail:i.z.string().optional(),coverUrl:i.z.string().optional()})}),U=i.z.object({body:i.z.object({businessActivity:i.z.string().optional(),email:i.z.string().optional(),backupEmail:i.z.string().optional(),legalType:i.z.string().optional(),numberOfEmployees:i.z.number().optional(),licenseNumber:i.z.string().optional(),coverUrl:i.z.string().optional()})}),F=l({companyName:{type:String,required:!0,unique:!0},email:{type:String,required:!0,unique:!0},businessActivity:{type:String,required:!0},legalType:{type:String,required:!0},numberOfEmployees:{type:Number,required:!0},licenseNumber:{type:String,required:!1,default:""},backupEmail:{type:String,required:!1,default:""},coverUrl:{type:String,required:!1}});F.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var P=n.model("Company",F);const R=l({userId:{type:n.Types.ObjectId,ref:"User",required:!0},companyId:{type:n.Types.ObjectId,ref:"Company",required:!0}});R.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var B=n.model("UserCompanyRef",R);const C="/company",$="/company/:id",M="/company/:name",x="/company/join",L=t.Router();L.route(C).post([b,m(E),async(t,e)=>{const{businessActivity:r,companyName:s,email:o,legalType:n,numberOfEmployees:a,licenseNumber:i,backupEmail:u,coverUrl:c}=t.body,d=new P({businessActivity:r,companyName:s,email:o,legalType:n,numberOfEmployees:a,licenseNumber:i,backupEmail:u,coverUrl:c});try{const t=await d.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),L.route(M).get([b,async(t,e)=>{const{name:r}=t.params||{};try{const t=await P.findOne({companyName:r});return t||e.status(400).json({status:400,error:"Company not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),L.route(x).post([b,async(t,e)=>{const{companyId:r}=t.query||{},{_id:s}=t.user||{};try{if(await B.findOne({userId:s})){const t=await B.findOneAndUpdate({userId:s},{$set:{companyId:r}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new B({userId:s,companyId:r}),o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),L.route($).put([b,m(U),async(t,e)=>{const{businessActivity:r,email:s,legalType:o,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}=t.body,{id:c}=t.params;try{const t=await P.findByIdAndUpdate(c,{$set:{businessActivity:r,email:s,legalType:o,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}},{new:!0});return t||e.status(400).json({status:400,error:"Company not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const J=i.z.object({body:i.z.object({firstName:i.z.string(),lastName:i.z.string(),nationality:i.z.string(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),V=i.z.object({body:i.z.object({firstName:i.z.string().optional(),lastName:i.z.string().optional(),nationality:i.z.string().optional(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),G=l({firstName:{type:String,required:!0},lastName:{type:String,required:!0},nationality:{type:String,required:!0},IDNumber:{type:String,required:!1},passportNumber:{type:String,required:!1},issueDate:{type:Date,required:!1},expiryDate:{type:Date,required:!1}});G.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var K=n.model("Profile",G);const H=l({userId:{type:n.Types.ObjectId,ref:"User",required:!0},profileId:{type:n.Types.ObjectId,ref:"Profile",unique:!0}});H.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Q=n.model("UserProfileRef",H);const W="/profile",X="/profile/:id",Y=t.Router();Y.route(W).post([b,m(J),async(t,e)=>{const{IDNumber:r,firstName:s,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{_id:c}=(null==t?void 0:t.user)||{};try{const t=new K({IDNumber:r,firstName:s,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}),d=await t.save(),p=new Q({userId:c,profileId:d.id});return await p.save(),e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Y.route(X).put([b,m(V),async(t,e)=>{const{IDNumber:r,firstName:s,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{id:c}=t.params||{};try{const t=await K.findByIdAndUpdate(c,{$set:{IDNumber:r,firstName:s,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}},{new:!0});return t||e.status(400).json({status:400,error:"Profile not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Z=t.Router();Z.route("/analytics/summary").get(((t,e)=>e.json({status:"ok",data:{income:12e3,expenses:8e3,account_balances:[{account_id:"12345",balance:"15000"},{account_id:"67890",balance:"5000"}]}}))),Z.route("/analytics/income-expense").get(((t,e)=>e.json({status:"ok",data:{income:[{category:"Sales",amount:1e4,subcategories:[{subcategory:"Product A",amount:6e3},{subcategory:"Product B",amount:4e3}]},{category:"Investments",amount:2e3}],expenses:[{category:"Salaries",amount:5e3},{category:"Rent",amount:3e3},{category:"Utilities",amount:1e3}]}})));const tt=i.z.object({body:i.z.object({companyName:i.z.string(),licenseNo:i.z.string(),registerNo:i.z.string(),companyEmail:i.z.string(),userEmail:i.z.string()})});i.z.object({body:i.z.object({companyName:i.z.string().optional(),licenseNo:i.z.string().optional(),registerNo:i.z.string().optional(),companyEmail:i.z.string().optional()})});const et=l({companyName:{type:String,required:!0},licenseNo:{type:String,required:!0},registerNo:{type:String,required:!0},companyEmail:{type:String,required:!0},userEmail:{type:String,required:!0,unique:!0},userId:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});et.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var rt=n.model("RequestCompany",et);const st="/request-company",ot="/request-company/approval",nt="/request-company",at=t.Router();at.route(st).post([b,m(tt),async(t,e)=>{const{companyName:r,companyEmail:s,licenseNo:o,registerNo:n,userEmail:a}=t.body,{_id:i}=t.user||{},u=new rt({companyName:r,companyEmail:s,licenseNo:o,registerNo:n,userEmail:a,userId:i});try{const t=await u.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),at.route(ot).put([b,async(t,e)=>{const{email:r}=t.query||{};try{const t=await rt.findOneAndUpdate({userEmail:r},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),at.route(nt).get([b,async(t,e)=>{const r=c.pick(t.query,["status"]);try{const t=await rt.find(r);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const it=i.z.object({body:i.z.object({name:i.z.string(),fee:i.z.string(),transactions:i.z.string(),atmDeposits:i.z.string(),addOns:i.z.string(),books:i.z.string()})}),ut=i.z.object({body:i.z.object({fee:i.z.string().optional(),transactions:i.z.string().optional(),atmDeposits:i.z.string().optional(),addOns:i.z.string().optional(),books:i.z.string().optional()})}),ct=l({name:{type:String,required:!0,unique:!0},fee:{type:String,required:!0},transactions:{type:String,required:!0},atmDeposits:{type:String,required:!0},addOns:{type:String,required:!0},books:{type:String,required:!0}});ct.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var dt=n.model("Rate",ct);const pt=l({userId:{type:n.Types.ObjectId,ref:"User",required:!0},rateName:{type:String,required:!0}});pt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var yt=n.model("UserRateRef",pt);const lt="/rate",mt="/rate/:name",bt="/rate",gt="/rate/:name",ft="/rate/join",jt=t.Router();jt.route(bt).get([b,async(t,e)=>{try{const t=await dt.find();return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),jt.route(gt).get([b,async(t,e)=>{const{name:r}=t.params;try{const t=await dt.findOne({name:r});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Rate not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),jt.route(ft).post([b,async(t,e)=>{const{rateName:r}=t.query||{},{_id:s}=t.user||{};try{if(await yt.findOne({userId:s})){const t=await yt.findOneAndUpdate({userId:s},{$set:{rateName:r}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new yt({userId:s,rateName:r}),o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),jt.route(lt).post([b,m(it),async(t,e)=>{const{name:r,fee:s,transactions:o,atmDeposits:n,addOns:a,books:i}=t.body;try{const t=new dt({name:r,fee:s,transactions:o,atmDeposits:n,addOns:a,books:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),jt.route(mt).put([b,m(ut),async(t,e)=>{const{fee:r,transactions:s,atmDeposits:o,addOns:n,books:a}=t.body,{name:i}=t.params;try{const t=await dt.findOneAndUpdate({name:i},{$set:{fee:r,transactions:s,atmDeposits:o,addOns:n,books:a}},{new:!0});return c.isEmpty(t)?e.status(400).json({status:400,error:"Rete not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const vt=t.Router();vt.route("/request-delivery").post([(t,e)=>e.status(200).json({status:"ok",data:t.body})]);const Nt=i.z.object({body:i.z.object({userId:i.z.string()})});i.z.object({body:i.z.object({userId:i.z.string().optional()})});const zt=l({user:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});zt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var ht=n.model("RequestAccount",zt);const wt="/request-account",It="/request-account/approval",qt="/request-account",_t=t.Router();_t.route(wt).post([b,m(Nt),async(t,e)=>{const{userId:r,status:s}=t.body,o=new ht({status:s,user:r});try{if(!await N.findById(r))return e.status(400).json({status:400,error:"User not found!"});const t=await o.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),_t.route(It).put([b,async(t,e)=>{const{userId:r}=t.query||{};try{const t=await ht.findOneAndUpdate({user:r},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),_t.route(qt).get([b,async(t,e)=>{const r=c.pick(t.query,["status"]);try{const t=await ht.find(r);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const St=i.z.object({body:i.z.object({accountName:i.z.string(),accountNumber:i.z.string(),iban:i.z.string(),swiftCode:i.z.string(),isMain:i.z.boolean().optional()})}),Ot=i.z.object({body:i.z.object({accountName:i.z.string().optional(),accountNumber:i.z.string().optional(),iban:i.z.string().optional(),swiftCode:i.z.string().optional(),isMain:i.z.boolean().optional()})}),kt=l({accountName:{type:String,required:!0,unique:!0},accountNumber:{type:String,required:!0,unique:!0},iban:{type:String,required:!0,unique:!0},swiftCode:{type:String,required:!0},balance:{type:Number,required:!0,default:0},isMain:{type:Boolean,required:!1,default:!1},userId:{type:n.Types.ObjectId,ref:"User",required:!0}});kt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Tt=n.model("Account",kt);const At="/account",Dt="/account/:id",Et=t.Router();Et.route(At).post([b,m(St),async(t,e)=>{const{accountName:r,accountNumber:s,iban:o,swiftCode:n,isMain:a}=t.body,{_id:i}=t.user||{};try{const t=new Tt({accountName:r,accountNumber:s,iban:o,swiftCode:n,isMain:a,userId:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Et.route(Dt).put([b,m(Ot),async(t,e)=>{const{accountName:r,accountNumber:s,iban:o,swiftCode:n,isMain:a}=t.body,{id:i}=t.params;try{const t=await Tt.findByIdAndUpdate(i,{$set:{accountName:r,accountNumber:s,iban:o,swiftCode:n,isMain:a}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Ut=l({accountId:{type:n.Types.ObjectId,ref:"Account",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},amount:{type:Number,required:!0},category:{type:String,required:!0},description:{type:String,required:!0},date:{type:String,required:!0},type:{type:String,required:!0},cardNumber:{type:String,required:!1}});Ut.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ft=n.model("Transactions",Ut);const Pt=l({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},accountNumber:{type:String,required:!0},transactionsId:{type:n.Types.ObjectId,ref:"Transactions",required:!0},recipientType:{type:String,required:!0},recipientName:{type:String,required:!0},recipientEmail:{type:String,required:!0},recipientPhone:{type:String,required:!0},detailDueDate:{type:String,required:!0},detailType:{type:String,required:!0},detailAmount:{type:String,required:!0},invoiceNumber:{type:String,required:!0,unique:!0}});Pt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Rt=n.model("Invoice",Pt);const Bt=l({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},accountNumber:{type:String,required:!0},transactionsId:{type:n.Types.ObjectId,ref:"Transactions",required:!0},toCompanyName:{type:String,required:!0},toIban:{type:String,required:!0},toSwiftCode:{type:String,required:!0},detailType:{type:String,required:!0},detailAmount:{type:String,required:!0},transferNumber:{type:String,required:!0,unique:!0}});Bt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ct=n.model("Transfer",Bt);const $t=i.z.object({body:i.z.object({accountId:i.z.string(),type:i.z.string().optional(),amount:i.z.string(),category:i.z.string(),description:i.z.string(),cardNumber:i.z.string().optional(),companyId:i.z.string().optional(),accountNumber:i.z.string().optional(),recipientType:i.z.string().optional(),recipientName:i.z.string().optional(),recipientEmail:i.z.string().optional(),recipientPhone:i.z.string().optional(),detailDueDate:i.z.string().optional(),detailType:i.z.string().optional(),invoiceNumber:i.z.string().optional(),transactionsId:i.z.string().optional(),toCompanyName:i.z.string().optional(),toIban:i.z.string().optional(),toSwiftCode:i.z.string().optional(),detailAmount:i.z.string().optional(),transferNumber:i.z.string().optional()})}),Mt="/transaction",xt="/transaction/deposit",Lt="/transaction/invoice",Jt="/transaction/transfer",Vt=t.Router();Vt.route(Mt).post([b,m($t),async(t,e)=>{const{accountId:r,type:s,amount:o,category:n,description:a,cardNumber:i}=t.body,{_id:u}=(null==t?void 0:t.user)||{};try{const t=new Ft({createdBy:u,accountId:r,amount:o,category:n,description:a,type:s,cardNumber:i,date:new Date}),c=await t.save();return e.status(200).json({status:"ok",data:c.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Vt.route(xt).post([b,m($t),async(t,e)=>{const{accountId:r,amount:s,category:o,description:n,cardNumber:a}=t.body,{_id:i}=t.user||{};try{const t=await Tt.findById(r);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+s))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)+Number(s),await t.save();const u=new Ft({accountId:r,amount:Number(s),category:o,description:n,type:"DEPOSIT",date:new Date,createdBy:i,cardNumber:a}),d=await u.save();return e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]),Vt.route(Lt).post([b,m($t),async(t,e)=>{const{accountId:r,amount:s,category:o,description:n,cardNumber:a,companyId:i,accountNumber:u,recipientType:d,recipientName:p,recipientEmail:y,recipientPhone:l,detailDueDate:m,detailType:b,invoiceNumber:g}=t.body,{_id:f}=t.user||{};try{const t=await Tt.findById(r);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+s))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)-Number(s),await t.save();const j=new Ft({accountId:r,amount:Number(s),category:o,description:n,type:"INVOICE",date:new Date,createdBy:f,cardNumber:a}),v=await j.save(),N=new Rt({accountNumber:u,companyId:i,createdBy:f,detailAmount:Number(s),detailDueDate:m,detailType:b,recipientEmail:y,recipientName:p,recipientPhone:l,recipientType:d,transactionsId:v._id,invoiceNumber:g}),z=await N.save();return e.status(200).json({status:"ok",data:{...v.doc(),invoice:z.doc()}})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]),Vt.route(Jt).post([b,m($t),async(t,e)=>{const{accountId:r,amount:s,category:o,description:n,cardNumber:a,companyId:i,accountNumber:u,toCompanyName:d,toIban:p,toSwiftCode:y,detailType:l,detailAmount:m,transferNumber:b}=t.body,{_id:g}=t.user||{};try{const t=await Tt.findById(r);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+s))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)-Number(s),await t.save();const m=new Ft({accountId:r,amount:Number(s),category:o,description:n,type:"TRANSFER",date:new Date,createdBy:g,cardNumber:a}),f=await m.save(),j=new Ct({accountNumber:u,companyId:i,createdBy:g,detailAmount:Number(s),detailType:l,transactionsId:f._id,toCompanyName:d,toIban:p,toSwiftCode:y,transferNumber:b}),v=await j.save();return e.status(200).json({status:"ok",data:{...f.doc(),invoice:v.doc()}})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]);const Gt=l({cardType:{type:String,required:!0},nicname:{type:String,required:!0},status:{type:String,required:!0},cardNumber:{type:String,required:!0},accountNumber:{type:String,required:!0},isMain:{type:Boolean,required:!1,default:!1}});Gt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Kt=n.model("Card",Gt);const Ht=i.z.object({body:i.z.object({cardType:i.z.string(),nicname:i.z.string(),status:i.z.string(),cardNumber:i.z.string(),accountNumber:i.z.string(),isMain:i.z.boolean().optional()})});i.z.object({body:i.z.object({cardType:i.z.string().optional(),nicname:i.z.string().optional(),status:i.z.string().optional(),cardNumber:i.z.string().optional(),accountNumber:i.z.string().optional(),isMain:i.z.boolean().optional()})});const Qt="/card",Wt="/card",Xt="/card/:id",Yt="/card/account/:accountNumber",Zt=t.Router();Zt.route(Wt).post([b,m(Ht),async(t,e)=>{const{cardType:r,nicname:s,status:o,cardNumber:n,accountNumber:a,isMain:i}=t.body;try{const t=new Kt({accountNumber:a,cardNumber:n,cardType:r,nicname:s,status:o,isMain:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Zt.route(Xt).get([b,async(t,e)=>{const{id:r}=t.params;try{const t=await Kt.findById(r);return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Zt.route(Qt).get([b,async(t,e)=>{try{const t=await Kt.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),Zt.route(Yt).get([b,async(t,e)=>{const{accountNumber:r}=t.params;console.log("accountNumber",r);try{const t=await Kt.find({accountNumber:r});return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]);const te=i.z.object({body:i.z.object({enableBiometric:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional()})}),ee=i.z.object({body:i.z.object({enableBiometric:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional()})}),re=l({userId:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},enableBiometric:{type:Boolean,required:!0,default:!1},confirmationMethods:{type:String,required:!0,default:"FACE_ID"},receiveNotificationsForPaymentsAndTransfers:{type:Boolean,required:!0,default:!1},receiveNotificationsForDeposits:{type:Boolean,required:!0,default:!1},receiveNotificationsForOutstandingInvoices:{type:Boolean,required:!0,default:!1},receiveNotificationsForExceedingSetLimits:{type:Boolean,required:!0,default:!1},notificationMethods:{type:String,required:!0,default:"EMAIL"}});re.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var se=n.model("Setting",re);const oe=n.Types.ObjectId,ne=n.Types.ObjectId,ae="/setting",ie="/setting",ue="/setting/me",ce="/setting/:id",de=t.Router();de.route(ae).post([b,m(te),async(t,e)=>{const{confirmationMethods:r,enableBiometric:s,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}=t.body,{_id:c}=t.user||{};try{const t=new se({userId:c,confirmationMethods:r,enableBiometric:s,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}),d=await t.save();return e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),de.route(ie).put([b,m(ee),async(t,e)=>{const{confirmationMethods:r,enableBiometric:s,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}=t.body,{_id:c}=t.user||{},d=new oe(c);try{const t=await se.findOneAndUpdate({userId:d},{$set:{confirmationMethods:r,enableBiometric:s,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}},{new:!0});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Data not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),de.route(ue).get([b,async(t,e)=>{const{_id:r}=t.user||{},s=new ne(r);try{const t=await se.findOne({userId:s});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),de.route(ce).get([b,async(t,e)=>{const{id:r}=t.params;try{const t=await se.findById(r);return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]);const pe=i.z.object({body:i.z.object({companyId:i.z.string(),url:i.z.string(),type:i.z.string(),name:i.z.string()})}),ye=i.z.object({body:i.z.object({url:i.z.string().optional(),type:i.z.string().optional(),name:i.z.string().optional()})}),le=l({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},url:{type:String,required:!1},type:{type:String,required:!1},name:{type:String,required:!1}});le.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var me=n.model("Atachment",le);const be=n.Types.ObjectId,ge="/atachment",fe="/atachment/:id",je="/atachment/:id",ve="/atachment/compnay/:id",Ne=t.Router();Ne.route(ge).post([b,m(pe),async(t,e)=>{const{name:r,type:s,companyId:o,url:n}=t.body;try{const t=new me({name:r,type:s,companyId:o,url:n}),a=await t.save();return e.status(200).json({status:"ok",data:a.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ne.route(fe).post([b,m(ye),async(t,e)=>{const{name:r,type:s,url:o}=t.body,{id:n}=t.params;try{const t=await me.findByIdAndUpdate(n,{$set:{name:r,type:s,url:o}},{new:!0});return t||e.status(400).json({status:400,error:"Atachment not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ne.route(je).delete([b,async(t,e)=>{const{id:r}=t.params;try{const t=await me.findByIdAndDelete(r,{returnOriginal:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ne.route(ve).get([b,async(t,e)=>{const{id:r}=t.params,s=new be(r);try{const t=await me.find({companyId:s});return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]);const ze=i.z.object({body:i.z.object({message:i.z.string()})});i.z.object({body:i.z.object({message:i.z.string().optional(),isRead:i.z.boolean().optional()})});const he=l({userId:{type:n.Types.ObjectId,ref:"User",required:!0},message:{type:String,required:!1},isRead:{type:String,required:!1,default:!1},receiverId:{type:n.Types.ObjectId,ref:"User",required:!1}});he.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var we=n.model("Chat",he);const Ie=n.Types.ObjectId,qe="/chat/send",_e="/chat/me",Se=t.Router();Se.route(qe).post([b,m(ze),async(t,e)=>{const{message:r,receiverId:s}=t.body,{_id:o}=t.user||{};try{const t=new we({userId:o,message:r,receiverId:s}),n=await t.save();return e.status(200).json({status:"ok",data:n.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Se.route(_e).get([b,async(t,e)=>{const{_id:r}=t.user||{},s=new Ie(r);try{const t=await we.find({userId:s});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Oe=+y("PORT"),ke=y("DB_URL");Oe&&ke||(console.error("Missing env!"),process.exit(1));const Te=t();Te.use(s("combined")),Te.use(r({contentSecurityPolicy:!1,frameguard:!1,crossOriginEmbedderPolicy:!1,crossOriginOpenerPolicy:!1,crossOriginResourcePolicy:!1})),Te.use(e({origin:"*"})),Te.use(t.json()),Te.use(t.urlencoded({extended:!1})),Te.use(t.static(d.join(__dirname+"/public"))),Te.use("/api",[D,A,L,Y,Z,at,jt,vt,_t,Et,Vt,Zt,de,Ne,Se]),Te.get("*",(async(t,e)=>e.sendFile(d.join(__dirname+"/public/index.html")))),Te.listen(Oe,(()=>{console.log(`Server started on port ${Oe}: http://localhost:${Oe}`),(({db:t})=>{const e=()=>{n.connect(t,{dbName:"pina_app"}).then((t=>console.info(`Successfully connected to ${t.connection.name}`))).catch((t=>(console.error("Error connecting to database: ",t),process.exit(1))))};e(),n.connection.on("disconnected",e)})({db:ke})})).on("error",(t=>{console.log("ERROR: ",t)})),exports.app=Te;

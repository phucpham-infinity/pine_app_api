"use strict";var t=require("express"),e=require("cors"),s=require("helmet"),o=require("morgan"),r=require("dotenv"),n=require("mongoose"),a=require("jsonwebtoken"),i=require("zod"),u=require("bcryptjs"),c=require("lodash"),d=require("path");function p(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var o=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,o.get?o:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}p(r).config();const l=t=>{var e;return null===(e=process.env)||void 0===e?void 0:e[t]},y=t=>new n.Schema({...t,createdAt:{type:Date,default:new Date},updatedAt:{type:Date,default:new Date}}),m=t=>(e,s,o)=>{try{t.parse({body:e.body,query:e.query,params:e.params}),o()}catch(t){return s.status(400).json({status:400,error:t.issues})}},f=(t,e,s)=>{var o;const r=null===(o=t.header("Authorization"))||void 0===o?void 0:o.replace("Bearer ","");if(!r)return e.status(403).json({status:403,error:"A token is required for authentication"});try{const e=a.verify(r,process.env.TOKEN_SECRET||"MICRO_APP");t.user=e}catch(t){return e.status(401).json({status:401,error:"Invalid Token"})}return s()},b=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),g=i.z.object({body:i.z.object({phone:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),j=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string()})}),v=y({phone:{type:String,required:!0,unique:!0},isUseFaceId:{type:Boolean,required:!1},isUseTouchId:{type:Boolean,required:!1},password:{type:String,required:!0}});v.method("doc",(function(){return c.omit(this._doc,["password"])})),v.pre("save",(function(t){var e=this;if(!e.isModified("password"))return t();u.genSalt(10,(function(s,o){if(s)return t(s);u.hash(e.password,o,(function(s,o){if(s)return t(s);e.password=o,t()}))}))})),v.method("comparePassword",(function(t,e){u.compare(t,this.password,(function(t,s){if(t)return e(t,!1);e(null,s)}))})),v.method("generateToken",(function(){return a.sign(this.doc(),process.env.MICRO_APP||"MICRO_APP",{expiresIn:"30d"})}));var z=n.model("User",v);const N=n.Types.ObjectId,h="/user/register",w="/user/login-with-phone",q="/user/me",I="/user",k="/user/update-by-phone",_="/user/phone/:phone",O="/user/:id",S=t.Router();S.route(h).post([m(b),async(t,e)=>{const{phone:s,password:o,isUseFaceId:r=!1,isUseTouchId:n=!1}=t.body,a=new z({password:o,phone:s,isUseFaceId:r,isUseTouchId:n});try{const t=await a.save();return e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}})}catch(t){return e.status(400).json({status:400,error:t})}}]),S.route(w).post([m(j),async(t,e)=>{const{password:s,phone:o}=(null==t?void 0:t.body)||{};try{const t=await z.findOne({phone:o});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(s,((s,o)=>s?e.status(400).json({status:400,error:s.message}):o?e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}}):e.status(400).json({status:400,error:"Password not match!"})))}catch(t){return e.status(400).json({status:400,error:t})}}]),S.route(q).get([f,async(t,e)=>{const{_id:s}=t.user||{},o=new N(s),r=await z.aggregate([{$lookup:{from:"userprofilerefs",localField:"_id",foreignField:"userId",as:"profile"}},{$lookup:{from:"profiles",localField:"profile.profileId",foreignField:"_id",as:"profile"}},{$unwind:{path:"$profile",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"usercompanyrefs",localField:"_id",foreignField:"userId",as:"company"}},{$lookup:{from:"companies",localField:"company.companyId",foreignField:"_id",as:"company"}},{$unwind:{path:"$company",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"requestcompanies",localField:"phone",foreignField:"phone",as:"requestCompany"}},{$unwind:{path:"$requestCompany",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"userraterefs",localField:"_id",foreignField:"userId",as:"rate"}},{$unwind:{path:"$rate",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"settings",localField:"_id",foreignField:"userId",as:"setting"}},{$unwind:{path:"$setting",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"accounts",localField:"_id",foreignField:"userId",as:"accounts"}},{$unwind:{path:"$profile.rate",preserveNullAndEmptyArrays:!0}},{$match:{_id:o}}]);return r?e.status(200).json({status:"ok",data:c.omit(null==r?void 0:r[0],["password","__v"])}):e.status(400).json({status:400,error:"User not found!"})}]),S.route(_).get([async(t,e)=>{const{phone:s}=t.params||{};try{const t=await z.findOne({phone:s});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"User not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),S.route(k).post([m(g),async(t,e)=>{const{isUseFaceId:s,isUseTouchId:o,phone:r}=t.body;try{const t=await z.findOneAndUpdate({phone:r},{$set:{isUseFaceId:s,isUseTouchId:o}},{new:!0});return t||e.status(400).json({status:400,error:"User not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),S.route(I).get([f,async(t,e)=>{try{const t=await z.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),S.route(O).get([f,async(t,e)=>{const{id:s}=t.params;try{const t=await z.findById(s);return c.isEmpty(t)?e.status(400).json({status:400,error:"User not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const D=t.Router();D.route("/ping").get(((t,e)=>{e.json({data:"pong",env:l("DB_URL")})}));const F=i.z.object({body:i.z.object({businessActivity:i.z.string(),companyName:i.z.string(),email:i.z.string(),legalType:i.z.string(),numberOfEmployees:i.z.number(),licenseNumber:i.z.string().optional(),backupEmail:i.z.string().optional(),coverUrl:i.z.string().optional()})}),A=i.z.object({body:i.z.object({businessActivity:i.z.string().optional(),email:i.z.string().optional(),backupEmail:i.z.string().optional(),legalType:i.z.string().optional(),numberOfEmployees:i.z.number().optional(),licenseNumber:i.z.string().optional(),coverUrl:i.z.string().optional()})}),E=y({companyName:{type:String,required:!0,unique:!0},email:{type:String,required:!0,unique:!0},businessActivity:{type:String,required:!0},legalType:{type:String,required:!0},numberOfEmployees:{type:Number,required:!0},licenseNumber:{type:String,required:!1,default:""},backupEmail:{type:String,required:!1,default:""},coverUrl:{type:String,required:!1}});E.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var U=n.model("Company",E);const T=y({userId:{type:n.Types.ObjectId,ref:"User",required:!0},companyId:{type:n.Types.ObjectId,ref:"Company",required:!0}});T.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var P=n.model("UserCompanyRef",T);const R="/company",$="/company/:name",M="/company/:name",x="/company/join",B=t.Router();B.route(R).post([f,m(F),async(t,e)=>{const{businessActivity:s,companyName:o,email:r,legalType:n,numberOfEmployees:a,licenseNumber:i,backupEmail:u,coverUrl:c}=t.body,d=new U({businessActivity:s,companyName:o,email:r,legalType:n,numberOfEmployees:a,licenseNumber:i,backupEmail:u,coverUrl:c});try{const t=await d.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),B.route(M).get([f,async(t,e)=>{const{name:s}=t.params||{};try{const t=await U.findOne({companyName:s});return t||e.status(400).json({status:400,error:"Company not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),B.route(x).post([f,async(t,e)=>{const{companyId:s}=t.query||{},{_id:o}=t.user||{};try{if(await P.findOne({userId:o})){const t=await P.findOneAndUpdate({userId:o},{$set:{companyId:s}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new P({userId:o,companyId:s}),r=await t.save();return e.status(200).json({status:"ok",data:null==r?void 0:r.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),B.route($).put([f,m(A),async(t,e)=>{const{businessActivity:s,email:o,legalType:r,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}=t.body,{name:c}=t.params;try{const t=await U.findOneAndUpdate({companyName:c},{$set:{businessActivity:s,email:o,legalType:r,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const C=i.z.object({body:i.z.object({firstName:i.z.string(),lastName:i.z.string(),nationality:i.z.string(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),L=i.z.object({body:i.z.object({firstName:i.z.string().optional(),lastName:i.z.string().optional(),nationality:i.z.string().optional(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),G=y({firstName:{type:String,required:!0},lastName:{type:String,required:!0},nationality:{type:String,required:!0},IDNumber:{type:String,required:!1},passportNumber:{type:String,required:!1},issueDate:{type:Date,required:!1},expiryDate:{type:Date,required:!1}});G.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var V=n.model("Profile",G);const J=y({userId:{type:n.Types.ObjectId,ref:"User",required:!0},profileId:{type:n.Types.ObjectId,ref:"Profile",unique:!0}});J.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var K=n.model("UserProfileRef",J);const H="/profile",Q="/profile/:id",W=t.Router();W.route(H).post([f,m(C),async(t,e)=>{const{IDNumber:s,firstName:o,expiryDate:r,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{_id:c}=(null==t?void 0:t.user)||{};try{const t=new V({IDNumber:s,firstName:o,expiryDate:r,issueDate:n,lastName:a,nationality:i,passportNumber:u}),d=await t.save(),p=new K({userId:c,yarn:d.id});return await p.save(),e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),W.route(Q).put([f,m(L),async(t,e)=>{const{IDNumber:s,firstName:o,expiryDate:r,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{id:c}=t.params||{};try{const t=await V.findByIdAndUpdate(c,{$set:{IDNumber:s,firstName:o,expiryDate:r,issueDate:n,lastName:a,nationality:i,passportNumber:u}},{new:!0});return t||e.status(400).json({status:400,error:"Profile not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const X=t.Router();X.route("/analytics/summary").get(((t,e)=>e.json({status:"ok",data:{income:12e3,expenses:8e3,account_balances:[{account_id:"12345",balance:"15000"},{account_id:"67890",balance:"5000"}]}}))),X.route("/analytics/income-expense").get(((t,e)=>e.json({status:"ok",data:{income:[{category:"Sales",amount:1e4,subcategories:[{subcategory:"Product A",amount:6e3},{subcategory:"Product B",amount:4e3}]},{category:"Investments",amount:2e3}],expenses:[{category:"Salaries",amount:5e3},{category:"Rent",amount:3e3},{category:"Utilities",amount:1e3}]}})));const Y=i.z.object({body:i.z.object({companyName:i.z.string(),licenseNo:i.z.string(),registerNo:i.z.string(),companyEmail:i.z.string(),userEmail:i.z.string()})});i.z.object({body:i.z.object({companyName:i.z.string().optional(),licenseNo:i.z.string().optional(),registerNo:i.z.string().optional(),companyEmail:i.z.string().optional()})});const Z=y({companyName:{type:String,required:!0},licenseNo:{type:String,required:!0},registerNo:{type:String,required:!0},companyEmail:{type:String,required:!0},userEmail:{type:String,required:!0,unique:!0},phone:{type:String,required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});Z.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var tt=n.model("RequestCompany",Z);const et="/request-company",st="/request-company/approval",ot="/request-company",rt=t.Router();rt.route(et).post([f,m(Y),async(t,e)=>{const{companyName:s,companyEmail:o,licenseNo:r,registerNo:n,userEmail:a}=t.body,{phone:i}=t.user||{},u=new tt({companyName:s,companyEmail:o,licenseNo:r,registerNo:n,userEmail:a,phone:i});try{const t=await u.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),rt.route(st).put([f,async(t,e)=>{const{email:s}=t.query||{};console.log("email",s);try{const t=await tt.findOneAndUpdate({userEmail:s},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),rt.route(ot).get([f,async(t,e)=>{const s=c.pick(t.query,["status"]);try{const t=await tt.find(s);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const nt=i.z.object({body:i.z.object({name:i.z.string(),fee:i.z.string(),transactions:i.z.string(),atmDeposits:i.z.string(),addOns:i.z.string(),books:i.z.string()})}),at=i.z.object({body:i.z.object({fee:i.z.string().optional(),transactions:i.z.string().optional(),atmDeposits:i.z.string().optional(),addOns:i.z.string().optional(),books:i.z.string().optional()})}),it=y({name:{type:String,required:!0,unique:!0},fee:{type:String,required:!0},transactions:{type:String,required:!0},atmDeposits:{type:String,required:!0},addOns:{type:String,required:!0},books:{type:String,required:!0}});it.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var ut=n.model("Rate",it);const ct=y({userId:{type:n.Types.ObjectId,ref:"User",required:!0},rateName:{type:String,required:!0}});ct.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var dt=n.model("UserRateRef",ct);const pt="/rate",lt="/rate/:name",yt="/rate",mt="/rate/:name",ft="/rate/join",bt=t.Router();bt.route(yt).get([f,async(t,e)=>{try{const t=await ut.find();return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),bt.route(mt).get([f,async(t,e)=>{const{name:s}=t.params;try{const t=await ut.findOne({name:s});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Rate not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),bt.route(ft).post([f,async(t,e)=>{const{rateName:s}=t.query||{},{_id:o}=t.user||{};try{if(await dt.findOne({userId:o})){const t=await dt.findOneAndUpdate({userId:o},{$set:{rateName:s}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new dt({userId:o,rateName:s}),r=await t.save();return e.status(200).json({status:"ok",data:null==r?void 0:r.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),bt.route(pt).post([f,m(nt),async(t,e)=>{const{name:s,fee:o,transactions:r,atmDeposits:n,addOns:a,books:i}=t.body;try{const t=new ut({name:s,fee:o,transactions:r,atmDeposits:n,addOns:a,books:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),bt.route(lt).put([f,m(at),async(t,e)=>{const{fee:s,transactions:o,atmDeposits:r,addOns:n,books:a}=t.body,{name:i}=t.params;try{const t=await ut.findOneAndUpdate({name:i},{$set:{fee:s,transactions:o,atmDeposits:r,addOns:n,books:a}},{new:!0});return c.isEmpty(t)?e.status(400).json({status:400,error:"Rete not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const gt=t.Router();gt.route("/request-delivery").post([(t,e)=>e.status(200).json({status:"ok",data:t.body})]);const jt=i.z.object({body:i.z.object({userId:i.z.string()})});i.z.object({body:i.z.object({userId:i.z.string().optional()})});const vt=y({user:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});vt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var zt=n.model("RequestAccount",vt);const Nt="/request-account",ht="/request-account/approval",wt="/request-account",qt=t.Router();qt.route(Nt).post([f,m(jt),async(t,e)=>{const{userId:s,status:o}=t.body,r=new zt({status:o,user:s});try{if(!await z.findById(s))return e.status(400).json({status:400,error:"User not found!"});const t=await r.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),qt.route(ht).put([f,async(t,e)=>{const{userId:s}=t.query||{};try{const t=await zt.findOneAndUpdate({user:s},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),qt.route(wt).get([f,async(t,e)=>{const s=c.pick(t.query,["status"]);try{const t=await zt.find(s);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const It=i.z.object({body:i.z.object({accountName:i.z.string(),accountNumber:i.z.string(),iban:i.z.string(),swiftCode:i.z.string(),isMain:i.z.boolean().optional()})}),kt=i.z.object({body:i.z.object({accountName:i.z.string().optional(),accountNumber:i.z.string().optional(),iban:i.z.string().optional(),swiftCode:i.z.string().optional(),isMain:i.z.boolean().optional()})}),_t=y({accountName:{type:String,required:!0,unique:!0},accountNumber:{type:String,required:!0,unique:!0},iban:{type:String,required:!0,unique:!0},swiftCode:{type:String,required:!0},balance:{type:Number,required:!0,default:0},isMain:{type:Boolean,required:!1,default:!1},userId:{type:n.Types.ObjectId,ref:"User",required:!0}});_t.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ot=n.model("Account",_t);const St="/account",Dt="/account/:id",Ft=t.Router();Ft.route(St).post([f,m(It),async(t,e)=>{const{accountName:s,accountNumber:o,iban:r,swiftCode:n,isMain:a}=t.body,{_id:i}=t.user||{};try{const t=new Ot({accountName:s,accountNumber:o,iban:r,swiftCode:n,isMain:a,userId:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ft.route(Dt).put([f,m(kt),async(t,e)=>{const{accountName:s,accountNumber:o,iban:r,swiftCode:n,isMain:a}=t.body,{id:i}=t.params;try{const t=await Ot.findByIdAndUpdate(i,{$set:{accountName:s,accountNumber:o,iban:r,swiftCode:n,isMain:a}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const At=y({accountId:{type:n.Types.ObjectId,ref:"Account",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},amount:{type:Number,required:!0},category:{type:String,required:!0},description:{type:String,required:!0},date:{type:String,required:!0},type:{type:String,required:!0}});At.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Et=n.model("Transactions",At);const Ut=i.z.object({body:i.z.object({accountId:i.z.string(),type:i.z.string().optional(),amount:i.z.string(),category:i.z.string(),description:i.z.string()})}),Tt="/transaction",Pt="/transaction/deposit",Rt=t.Router();Rt.route(Tt).post([f,m(Ut),async(t,e)=>{const{accountId:s,type:o,amount:r,category:n,description:a}=t.body,{_id:i}=(null==t?void 0:t.user)||{};try{const t=new Et({createdBy:i,accountId:s,amount:r,category:n,description:a,type:o,date:new Date}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Rt.route(Pt).post([f,m(Ut),async(t,e)=>{const{accountId:s,amount:o,category:r,description:n}=t.body,{_id:a}=t.user||{};try{const t=await Ot.findById(s);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+o))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)+Number(o),await t.save();const i=new Et({accountId:s,amount:Number(o),category:r,description:n,type:"DEPOSIT",date:new Date,createdBy:a}),u=await i.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const $t=y({cardType:{type:String,required:!0},nicname:{type:String,required:!0},status:{type:String,required:!0},cardNumber:{type:String,required:!0},accountNumber:{type:String,required:!0},isMain:{type:Boolean,required:!1,default:!1}});$t.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Mt=n.model("Card",$t);const xt=i.z.object({body:i.z.object({cardType:i.z.string(),nicname:i.z.string(),status:i.z.string(),cardNumber:i.z.string(),accountNumber:i.z.string(),isMain:i.z.boolean().optional()})});i.z.object({body:i.z.object({cardType:i.z.string().optional(),nicname:i.z.string().optional(),status:i.z.string().optional(),cardNumber:i.z.string().optional(),accountNumber:i.z.string().optional(),isMain:i.z.boolean().optional()})});const Bt="/card",Ct="/card",Lt="/card/:id",Gt="/card/account/:accountNumber",Vt=t.Router();Vt.route(Ct).post([f,m(xt),async(t,e)=>{const{cardType:s,nicname:o,status:r,cardNumber:n,accountNumber:a,isMain:i}=t.body;try{const t=new Mt({accountNumber:a,cardNumber:n,cardType:s,nicname:o,status:r,isMain:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Vt.route(Lt).get([f,async(t,e)=>{const{id:s}=t.params;try{const t=await Mt.findById(s);return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Vt.route(Bt).get([f,async(t,e)=>{try{const t=await Mt.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),Vt.route(Gt).get([f,async(t,e)=>{const{accountNumber:s}=t.params;console.log("accountNumber",s);try{const t=await Mt.find({accountNumber:s});return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Jt=i.z.object({body:i.z.object({enableFaceID:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional()})}),Kt=i.z.object({body:i.z.object({enableFaceID:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional()})}),Ht=y({userId:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},enableFaceID:{type:Boolean,required:!0,default:!1},confirmationMethods:{type:String,required:!0,default:"FACE_ID"},receiveNotificationsForPaymentsAndTransfers:{type:Boolean,required:!0,default:!1},receiveNotificationsForDeposits:{type:Boolean,required:!0,default:!1},receiveNotificationsForOutstandingInvoices:{type:Boolean,required:!0,default:!1},receiveNotificationsForExceedingSetLimits:{type:Boolean,required:!0,default:!1},notificationMethods:{type:String,required:!0,default:"EMAIL"}});Ht.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Qt=n.model("Setting",Ht);const Wt=n.Types.ObjectId,Xt=n.Types.ObjectId,Yt="/setting",Zt="/setting",te="/setting/me",ee="/setting/:id",se=t.Router();se.route(Yt).post([f,m(Jt),async(t,e)=>{const{confirmationMethods:s,enableFaceID:o,notificationMethods:r,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}=t.body,{_id:c}=t.user||{};try{const t=new Qt({userId:c,confirmationMethods:s,enableFaceID:o,notificationMethods:r,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}),d=await t.save();return e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),se.route(Zt).put([f,m(Kt),async(t,e)=>{const{confirmationMethods:s,enableFaceID:o,notificationMethods:r,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}=t.body,{_id:c}=t.user||{},d=new Wt(c);try{const t=await Qt.findOneAndUpdate({userId:d},{$set:{confirmationMethods:s,enableFaceID:o,notificationMethods:r,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u}},{new:!0});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Data not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),se.route(te).get([f,async(t,e)=>{const{_id:s}=t.user||{},o=new Xt(s);try{const t=await Qt.findOne({userId:o});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),se.route(ee).get([f,async(t,e)=>{const{id:s}=t.params;try{const t=await Qt.findById(s);return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]);const oe=+l("PORT"),re=l("DB_URL");oe&&re||(console.error("Missing env!"),process.exit(1));const ne=t();ne.use(o("combined")),ne.use(s({contentSecurityPolicy:!1,frameguard:!1,crossOriginEmbedderPolicy:!1,crossOriginOpenerPolicy:!1,crossOriginResourcePolicy:!1})),ne.use(e({origin:"*"})),ne.use(t.json()),ne.use(t.urlencoded({extended:!1})),ne.use(t.static(d.join(__dirname+"/public"))),ne.use("/api",[D,S,B,W,X,rt,bt,gt,qt,Ft,Rt,Vt,se]),ne.get("*",(async(t,e)=>e.sendFile(d.join(__dirname+"/public/index.html")))),ne.listen(oe,(()=>{console.log(`Server started on port ${oe}: http://localhost:${oe}`),(({db:t})=>{const e=()=>{n.connect(t,{dbName:"pina_app"}).then((t=>console.info(`Successfully connected to ${t.connection.name}`))).catch((t=>(console.error("Error connecting to database: ",t),process.exit(1))))};e(),n.connection.on("disconnected",e)})({db:re})})).on("error",(t=>{console.log("ERROR: ",t)})),exports.app=ne;

"use strict";var t=require("express"),e=require("cors"),s=require("helmet"),r=require("morgan"),o=require("dotenv"),n=require("mongoose"),a=require("jsonwebtoken"),i=require("zod"),u=require("bcryptjs"),c=require("lodash"),d=require("date-fns"),p=require("pdfkit"),y=require("path");function l(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var r=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}l(o).config();const m=t=>{var e;return null===(e=process.env)||void 0===e?void 0:e[t]},f=t=>new n.Schema({...t,createdAt:{type:Date,default:new Date},updatedAt:{type:Date,default:new Date}}),g=t=>(e,s,r)=>{try{t.parse({body:e.body,query:e.query,params:e.params}),r()}catch(t){return s.status(400).json({status:400,error:t.issues})}},b=(t,e,s)=>{var r;const o=null===(r=t.header("Authorization"))||void 0===r?void 0:r.replace("Bearer ","");if(!o)return e.status(403).json({status:403,error:"A token is required for authentication"});try{const e=a.verify(o,process.env.TOKEN_SECRET||"MICRO_APP");t.user=e}catch(t){return e.status(401).json({status:401,error:"Invalid Token"})}return s()},j=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),v=i.z.object({body:i.z.object({phone:i.z.string(),isUseTouchId:i.z.boolean().default(!1),isUseFaceId:i.z.boolean().default(!1)})}),I=i.z.object({body:i.z.object({phone:i.z.string(),password:i.z.string()})}),N=f({phone:{type:String,required:!0,unique:!0},isUseFaceId:{type:Boolean,required:!1},isUseTouchId:{type:Boolean,required:!1},password:{type:String,required:!0}});N.method("doc",(function(){return c.omit(this._doc,["password"])})),N.pre("save",(function(t){var e=this;if(!e.isModified("password"))return t();u.genSalt(10,(function(s,r){if(s)return t(s);u.hash(e.password,r,(function(s,r){if(s)return t(s);e.password=r,t()}))}))})),N.method("comparePassword",(function(t,e){u.compare(t,this.password,(function(t,s){if(t)return e(t,!1);e(null,s)}))})),N.method("generateToken",(function(){return a.sign(this.doc(),process.env.MICRO_APP||"MICRO_APP",{expiresIn:"30d"})}));var w=n.model("User",N);const h=n.Types.ObjectId,z="/user/register",q="/user/check",S="/user/login-with-phone",A="/user/me",O="/user",k="/user/update-by-phone",_="/user/phone/:phone",T="/user/:id",D="/change/pin",E="/change/phone",F=t.Router();F.route(z).post([g(j),async(t,e)=>{const{phone:s,password:r,isUseFaceId:o=!1,isUseTouchId:n=!1}=t.body,a=new w({password:r,phone:s,isUseFaceId:o,isUseTouchId:n});try{const t=await a.save();return e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}})}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(q).post([g(j),async(t,e)=>{const{password:s,phone:r}=(null==t?void 0:t.body)||{};try{const t=await w.findOne({phone:r});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(s,((s,r)=>s?e.status(400).json({status:400,error:s.message}):r?e.status(200).json({status:"ok",data:{...t.doc()}}):e.status(400).json({status:400,error:"Password not match!"})))}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(S).post([g(I),async(t,e)=>{const{password:s,phone:r}=(null==t?void 0:t.body)||{};try{const t=await w.findOne({phone:r});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(s,((s,r)=>s?e.status(400).json({status:400,error:s.message}):r?e.status(200).json({status:"ok",data:{...t.doc(),token:t.generateToken()}}):e.status(400).json({status:400,error:"Password not match!"})))}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(A).get([b,async(t,e)=>{const{_id:s}=t.user||{},r=new h(s),o=await w.aggregate([{$lookup:{from:"userprofilerefs",localField:"_id",foreignField:"userId",as:"profile"}},{$lookup:{from:"profiles",localField:"profile.profileId",foreignField:"_id",as:"profile"}},{$unwind:{path:"$profile",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"usercompanyrefs",localField:"_id",foreignField:"userId",as:"company"}},{$lookup:{from:"companies",localField:"company.companyId",foreignField:"_id",as:"company"}},{$unwind:{path:"$company",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"requestcompanies",localField:"_id",foreignField:"userId",as:"requestCompany"}},{$unwind:{path:"$requestCompany",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"userraterefs",localField:"_id",foreignField:"userId",as:"rate"}},{$unwind:{path:"$rate",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"settings",localField:"_id",foreignField:"userId",as:"setting"}},{$unwind:{path:"$setting",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"accounts",localField:"_id",foreignField:"userId",as:"accounts"}},{$unwind:{path:"$profile.rate",preserveNullAndEmptyArrays:!0}},{$match:{_id:r}}]);return o?e.status(200).json({status:"ok",data:c.omit(null==o?void 0:o[0],["password","__v"])}):e.status(400).json({status:400,error:"User not found!"})}]),F.route(_).get([async(t,e)=>{const{phone:s}=t.params||{};try{const t=await w.findOne({phone:s});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"User not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(k).post([g(v),async(t,e)=>{const{isUseFaceId:s,isUseTouchId:r,phone:o}=t.body;try{const t=await w.findOneAndUpdate({phone:o},{$set:{isUseFaceId:s,isUseTouchId:r}},{new:!0});return t||e.status(400).json({status:400,error:"User not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(O).get([b,async(t,e)=>{try{const t=await w.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(T).get([b,async(t,e)=>{const{id:s}=t.params;try{const t=await w.findById(s);return c.isEmpty(t)?e.status(400).json({status:400,error:"User not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(D).post([b,async(t,e)=>{const{password:s,newPassword:r}=(null==t?void 0:t.body)||{},{_id:o}=t.user||{};try{const t=await w.findById(o);if(!t)return e.status(400).json({status:400,error:"User not found!"});t.comparePassword(s,(async(s,o)=>{if(s)return e.status(400).json({status:400,error:s.message});if(!o)return e.status(400).json({status:400,error:"Password not match!"});t.password=r;const n=await t.save();return e.status(200).json({status:"ok",data:null==n?void 0:n.doc()})}))}catch(t){return e.status(400).json({status:400,error:t})}}]),F.route(E).post([b,async(t,e)=>{const{newPhone:s}=(null==t?void 0:t.body)||{},{phone:r}=t.user||{};try{const t=await w.findOne({phone:r});if(!t)return e.status(400).json({status:400,error:"User not found!"});t.phone=s;const o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const $=t.Router();$.route("/ping").get(((t,e)=>{e.json({data:"pong",env:m("DB_URL")})}));const U=i.z.object({body:i.z.object({businessActivity:i.z.string(),companyName:i.z.string(),email:i.z.string(),legalType:i.z.string(),numberOfEmployees:i.z.number(),licenseNumber:i.z.string().optional(),backupEmail:i.z.string().optional(),coverUrl:i.z.string().optional()})}),P=i.z.object({body:i.z.object({businessActivity:i.z.string().optional(),email:i.z.string().optional(),backupEmail:i.z.string().optional(),legalType:i.z.string().optional(),numberOfEmployees:i.z.number().optional(),licenseNumber:i.z.string().optional(),coverUrl:i.z.string().optional()})}),R=f({companyName:{type:String,required:!0,unique:!0},email:{type:String,required:!0,unique:!0},businessActivity:{type:String,required:!0},legalType:{type:String,required:!0},numberOfEmployees:{type:Number,required:!0},licenseNumber:{type:String,required:!1,default:""},backupEmail:{type:String,required:!1,default:""},coverUrl:{type:String,required:!1},status:{type:String,required:!1,default:"PROCESSING"}});R.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var B=n.model("Company",R);const C=f({userId:{type:n.Types.ObjectId,ref:"User",required:!0},companyId:{type:n.Types.ObjectId,ref:"Company",required:!0}});C.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var M=n.model("UserCompanyRef",C);const x="/company",L="/company/:id",V="/company/by/:name",J="/company/join",G="/company/check",Y=t.Router();Y.route(x).post([b,g(U),async(t,e)=>{var s,r;const{businessActivity:o,companyName:n,email:a,legalType:i,numberOfEmployees:u,licenseNumber:d,backupEmail:p,coverUrl:y}=t.body,l=new B({businessActivity:o,companyName:n,email:a,legalType:i,numberOfEmployees:u,licenseNumber:d,backupEmail:p,coverUrl:y});try{const t=await l.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return console.log("error",t),11e3===t.code?e.status(400).json({status:400,message:`This ${null===(s=c.keys(null==t?void 0:t.keyPattern))||void 0===s?void 0:s[0]} is unavailable`,error:null===(r=c.keys(null==t?void 0:t.keyPattern))||void 0===r?void 0:r[0]}):e.status(400).json({status:400,error:t})}}]),Y.route(V).get([b,async(t,e)=>{const{name:s}=t.params||{};try{const t=await B.findOne({companyName:s});return t||e.status(400).json({status:400,error:"Company not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Y.route(J).post([b,async(t,e)=>{const{companyId:s}=t.query||{},{_id:r}=t.user||{};try{if(await M.findOne({userId:r})){const t=await M.findOneAndUpdate({userId:r},{$set:{companyId:s}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new M({userId:r,companyId:s}),o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Y.route(G).get([b,async(t,e)=>{const{companyId:s}=t.query||{};console.log("companyId",s);try{const t=await B.findById(s);if(!t)return e.status(400).json({status:400,error:"Company not found!"});if("PROCESSING"===t.status)return t.status="VERIFIED",await t.save(),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()});if("VERIFIED"===t.status)return t.status="DELIVERY",await t.save(),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()});if("DELIVERY"===t.status)return t.status="DONE",await t.save(),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()});if("DONE"==t.status)return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Y.route(L).put([b,g(P),async(t,e)=>{const{businessActivity:s,email:r,legalType:o,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}=t.body,{id:c}=t.params;try{const t=await B.findByIdAndUpdate(c,{$set:{businessActivity:s,email:r,legalType:o,numberOfEmployees:n,licenseNumber:a,backupEmail:i,coverUrl:u}},{new:!0});return t||e.status(400).json({status:400,error:"Company not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const K=i.z.object({body:i.z.object({firstName:i.z.string(),lastName:i.z.string(),nationality:i.z.string(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),H=i.z.object({body:i.z.object({firstName:i.z.string().optional(),lastName:i.z.string().optional(),nationality:i.z.string().optional(),IDNumber:i.z.string().optional(),passportNumber:i.z.string().optional(),issueDate:i.z.string().optional(),expiryDate:i.z.string().optional()})}),Q=f({firstName:{type:String,required:!0},lastName:{type:String,required:!0},nationality:{type:String,required:!0},IDNumber:{type:String,required:!1},passportNumber:{type:String,required:!1},issueDate:{type:Date,required:!1},expiryDate:{type:Date,required:!1}});Q.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var W=n.model("Profile",Q);const X=f({userId:{type:n.Types.ObjectId,ref:"User",required:!0},profileId:{type:n.Types.ObjectId,ref:"Profile",unique:!0}});X.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Z=n.model("UserProfileRef",X);const tt="/profile",et="/profile/:id",st=t.Router();st.route(tt).post([b,g(K),async(t,e)=>{const{IDNumber:s,firstName:r,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{_id:c}=(null==t?void 0:t.user)||{};try{const t=new W({IDNumber:s,firstName:r,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}),d=await t.save(),p=new Z({userId:c,profileId:d.id});return await p.save(),e.status(200).json({status:"ok",data:d.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),st.route(et).put([b,g(H),async(t,e)=>{const{IDNumber:s,firstName:r,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}=t.body,{id:c}=t.params||{};try{const t=await W.findByIdAndUpdate(c,{$set:{IDNumber:s,firstName:r,expiryDate:o,issueDate:n,lastName:a,nationality:i,passportNumber:u}},{new:!0});return t||e.status(400).json({status:400,error:"Profile not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const rt=t.Router();rt.route("/analytics/summary").get(((t,e)=>e.json({status:"ok",data:{income:12e3,expenses:8e3,account_balances:[{account_id:"12345",balance:"15000"},{account_id:"67890",balance:"5000"}]}}))),rt.route("/analytics/income-expense").get(((t,e)=>e.json({status:"ok",data:{income:[{category:"Sales",amount:1e4,subcategories:[{subcategory:"Product A",amount:6e3},{subcategory:"Product B",amount:4e3}]},{category:"Investments",amount:2e3}],expenses:[{category:"Salaries",amount:5e3},{category:"Rent",amount:3e3},{category:"Utilities",amount:1e3}]}})));const ot=i.z.object({body:i.z.object({companyName:i.z.string(),licenseNo:i.z.string(),registerNo:i.z.string(),companyEmail:i.z.string(),userEmail:i.z.string()})});i.z.object({body:i.z.object({companyName:i.z.string().optional(),licenseNo:i.z.string().optional(),registerNo:i.z.string().optional(),companyEmail:i.z.string().optional()})});const nt=f({companyName:{type:String,required:!0},licenseNo:{type:String,required:!0},registerNo:{type:String,required:!0},companyEmail:{type:String,required:!0},userEmail:{type:String,required:!0,unique:!0},userId:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});nt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var at=n.model("RequestCompany",nt);const it="/request-company",ut="/request-company/approval",ct="/request-company",dt=t.Router();dt.route(it).post([b,g(ot),async(t,e)=>{const{companyName:s,companyEmail:r,licenseNo:o,registerNo:n,userEmail:a}=t.body,{_id:i}=t.user||{},u=new at({companyName:s,companyEmail:r,licenseNo:o,registerNo:n,userEmail:a,userId:i});try{const t=await u.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),dt.route(ut).put([b,async(t,e)=>{const{companyName:s,userId:r,email:o}=t.query||{};try{const t=await B.findOne({companyName:s});if(!t)return e.status(400).json({status:400,error:"Company not found!"});const n=await w.findById(r);if(!n)return e.status(400).json({status:400,error:"User not found!"});const a=new M({userId:n._id,companyId:t._id});await a.save();const i=await at.findOneAndUpdate({userEmail:o},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:i})}catch(t){return e.status(400).json({status:400,error:t})}}]),dt.route(ct).get([b,async(t,e)=>{const s=c.pick(t.query,["status"]);try{const t=await at.find(s);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const pt=i.z.object({body:i.z.object({name:i.z.string(),fee:i.z.string(),transactions:i.z.string(),atmDeposits:i.z.string(),addOns:i.z.string(),books:i.z.string()})}),yt=i.z.object({body:i.z.object({fee:i.z.string().optional(),transactions:i.z.string().optional(),atmDeposits:i.z.string().optional(),addOns:i.z.string().optional(),books:i.z.string().optional()})}),lt=f({name:{type:String,required:!0,unique:!0},fee:{type:String,required:!0},transactions:{type:String,required:!0},atmDeposits:{type:String,required:!0},addOns:{type:String,required:!0},books:{type:String,required:!0}});lt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var mt=n.model("Rate",lt);const ft=f({userId:{type:n.Types.ObjectId,ref:"User",required:!0},rateName:{type:String,required:!0}});ft.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var gt=n.model("UserRateRef",ft);const bt="/rate",jt="/rate/:name",vt="/rate",It="/rate/:name",Nt="/rate/join",wt=t.Router();wt.route(vt).get([b,async(t,e)=>{try{const t=await mt.find();return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),wt.route(It).get([b,async(t,e)=>{const{name:s}=t.params;try{const t=await mt.findOne({name:s});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Rate not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),wt.route(Nt).post([b,async(t,e)=>{const{rateName:s}=t.query||{},{_id:r}=t.user||{};try{if(await gt.findOne({userId:r})){const t=await gt.findOneAndUpdate({userId:r},{$set:{rateName:s}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}const t=new gt({userId:r,rateName:s}),o=await t.save();return e.status(200).json({status:"ok",data:null==o?void 0:o.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),wt.route(bt).post([b,g(pt),async(t,e)=>{const{name:s,fee:r,transactions:o,atmDeposits:n,addOns:a,books:i}=t.body;try{const t=new mt({name:s,fee:r,transactions:o,atmDeposits:n,addOns:a,books:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),wt.route(jt).put([b,g(yt),async(t,e)=>{const{fee:s,transactions:r,atmDeposits:o,addOns:n,books:a}=t.body,{name:i}=t.params;try{const t=await mt.findOneAndUpdate({name:i},{$set:{fee:s,transactions:r,atmDeposits:o,addOns:n,books:a}},{new:!0});return c.isEmpty(t)?e.status(400).json({status:400,error:"Rete not found!"}):e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const ht=t.Router();ht.route("/request-delivery").post([(t,e)=>e.status(200).json({status:"ok",data:t.body})]);const zt=i.z.object({body:i.z.object({userId:i.z.string()})});i.z.object({body:i.z.object({userId:i.z.string().optional()})});const qt=f({user:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},status:{type:String,enum:["PENDING","APPROVAL","REJECT"],default:"PENDING"}});qt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var St=n.model("RequestAccount",qt);const At="/request-account",Ot="/request-account/approval",kt="/request-account",_t=t.Router();_t.route(At).post([b,g(zt),async(t,e)=>{const{userId:s,status:r}=t.body,o=new St({status:r,user:s});try{if(!await w.findById(s))return e.status(400).json({status:400,error:"User not found!"});const t=await o.save();return e.status(200).json({status:"ok",data:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),_t.route(Ot).put([b,async(t,e)=>{const{userId:s}=t.query||{};try{const t=await St.findOneAndUpdate({user:s},{$set:{status:"APPROVAL"}},{new:!0});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),_t.route(kt).get([b,async(t,e)=>{const s=c.pick(t.query,["status"]);try{const t=await St.find(s);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Tt=i.z.object({body:i.z.object({accountName:i.z.string(),accountNumber:i.z.string(),iban:i.z.string(),swiftCode:i.z.string(),isMain:i.z.boolean().optional()})}),Dt=i.z.object({body:i.z.object({accountName:i.z.string().optional(),accountNumber:i.z.string().optional(),iban:i.z.string().optional(),swiftCode:i.z.string().optional(),isMain:i.z.boolean().optional()})}),Et=f({accountName:{type:String,required:!0,unique:!0},accountNumber:{type:String,required:!0,unique:!0},iban:{type:String,required:!0,unique:!0},swiftCode:{type:String,required:!0},balance:{type:Number,required:!0,default:0},isMain:{type:Boolean,required:!1,default:!1},userId:{type:n.Types.ObjectId,ref:"User",required:!0}});Et.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ft=n.model("Account",Et);const $t="/account",Ut="/account/:id",Pt="/account/:id",Rt=t.Router();Rt.route($t).post([b,g(Tt),async(t,e)=>{const{accountName:s,accountNumber:r,iban:o,swiftCode:n,isMain:a}=t.body,{_id:i}=t.user||{};try{const t=new Ft({accountName:s,accountNumber:r,iban:o,swiftCode:n,isMain:a,userId:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Rt.route(Ut).put([b,g(Dt),async(t,e)=>{const{accountName:s,accountNumber:r,iban:o,swiftCode:n,isMain:a}=t.body,{id:i}=t.params;try{const t=await Ft.findByIdAndUpdate(i,{$set:{accountName:s,accountNumber:r,iban:o,swiftCode:n,isMain:a}},{new:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Rt.route(Pt).delete([b,async(t,e)=>{const{id:s}=t.params;try{const t=await Ft.findByIdAndRemove(s,{returnOriginal:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Bt=f({accountId:{type:n.Types.ObjectId,ref:"Account",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},amount:{type:Number,required:!0},category:{type:String,required:!0},description:{type:String,required:!0},date:{type:String,required:!0},type:{type:String,required:!0},cardNumber:{type:String,required:!1}});Bt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ct=n.model("Transactions",Bt);const Mt=f({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},accountNumber:{type:String,required:!0},transactionsId:{type:n.Types.ObjectId,ref:"Transactions",required:!0},recipientType:{type:String,required:!0},recipientName:{type:String,required:!0},recipientEmail:{type:String,required:!0},recipientPhone:{type:String,required:!0},detailDueDate:{type:String,required:!0},detailType:{type:String,required:!0},detailAmount:{type:String,required:!0},invoiceNumber:{type:String,required:!0,unique:!0}});Mt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var xt=n.model("Invoice",Mt);const Lt=f({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},createdBy:{type:n.Types.ObjectId,ref:"User",required:!0},accountNumber:{type:String,required:!0},transactionsId:{type:n.Types.ObjectId,ref:"Transactions",required:!0},toCompanyName:{type:String,required:!0},toIban:{type:String,required:!0},toSwiftCode:{type:String,required:!0},detailType:{type:String,required:!0},detailAmount:{type:String,required:!0},transferNumber:{type:String,required:!0,unique:!0}});Lt.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Vt=n.model("Transfer",Lt);const Jt=n.Types.ObjectId,Gt=n.Types.ObjectId,Yt=i.z.object({body:i.z.object({accountId:i.z.string(),type:i.z.string().optional(),amount:i.z.string(),category:i.z.string(),description:i.z.string(),companyId:i.z.string(),cardNumber:i.z.string().optional(),accountNumber:i.z.string().optional(),recipientType:i.z.string().optional(),recipientName:i.z.string().optional(),recipientEmail:i.z.string().optional(),recipientPhone:i.z.string().optional(),detailDueDate:i.z.string().optional(),detailType:i.z.string().optional(),invoiceNumber:i.z.string().optional(),transactionsId:i.z.string().optional(),toCompanyName:i.z.string().optional(),toIban:i.z.string().optional(),toSwiftCode:i.z.string().optional(),detailAmount:i.z.string().optional(),transferNumber:i.z.string().optional()})}),Kt="/transaction",Ht="/transaction/account/:accountId",Qt="/transaction/company/:companyId",Wt="/transaction/deposit",Xt="/transaction/invoice",Zt="/transaction/transfer",te="/transaction/invoice-pdf/:invoiceNumber",ee=t.Router();ee.route(Kt).post([b,g(Yt),async(t,e)=>{const{accountId:s,type:r,amount:o,category:n,description:a,cardNumber:i}=t.body,{_id:u}=(null==t?void 0:t.user)||{};try{const t=new Ct({createdBy:u,accountId:s,amount:o,category:n,description:a,type:r,cardNumber:i,date:new Date}),c=await t.save();return e.status(200).json({status:"ok",data:c.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),ee.route(Wt).post([b,g(Yt),async(t,e)=>{const{accountId:s,amount:r,category:o,description:n,cardNumber:a,companyId:i}=t.body,{_id:u}=t.user||{};try{const t=await Ft.findById(s);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+r))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)+Number(r),await t.save();const d=(new Date).toISOString(),p=new Ct({accountId:s,amount:Number(r),category:o,description:n,type:"DEPOSIT",date:d,createdBy:u,cardNumber:a,companyId:i,createdAt:d,updatedAt:d}),y=await p.save();return e.status(200).json({status:"ok",data:y.doc()})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]),ee.route(Xt).post([b,g(Yt),async(t,e)=>{const{accountId:s,amount:r,category:o,description:n,cardNumber:a,companyId:i,accountNumber:u,recipientType:d,recipientName:p,recipientEmail:y,recipientPhone:l,detailDueDate:m,detailType:f,invoiceNumber:g}=t.body,{_id:b}=t.user||{};try{const t=await Ft.findById(s);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+r))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)+Number(r),await t.save();const j=(new Date).toISOString(),v=new Ct({accountId:s,amount:Number(r),category:o,description:n,type:"INVOICE",date:new Date,createdBy:b,cardNumber:a,companyId:i,createdAt:j,updatedAt:j}),I=await v.save(),N=new xt({accountNumber:u,companyId:i,createdBy:b,detailAmount:Number(r),detailDueDate:m,detailType:f,recipientEmail:y,recipientName:p,recipientPhone:l,recipientType:d,transactionsId:I._id,invoiceNumber:g,createdAt:j,updatedAt:j}),w=await N.save();return e.status(200).json({status:"ok",data:{...I.doc(),invoice:w.doc()}})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]),ee.route(Zt).post([b,g(Yt),async(t,e)=>{const{accountId:s,amount:r,category:o,description:n,cardNumber:a,companyId:i,accountNumber:u,toCompanyName:d,toIban:p,toSwiftCode:y,detailType:l,transferNumber:m}=t.body,{_id:f}=t.user||{};try{const t=await Ft.findById(s);if(!t)return e.status(400).json({status:400,error:"Account not found!"});if(!c.isNumber(+r))return e.status(400).json({status:400,error:"Amount invalid!"});t.balance=Number(null==t?void 0:t.balance)-Number(r),await t.save();const g=(new Date).toISOString(),b=new Ct({accountId:s,amount:Number(r),category:o,description:n,type:"TRANSFER",date:new Date,createdBy:f,cardNumber:a,companyId:i,createdAt:g,updatedAt:g}),j=await b.save(),v=new Vt({accountNumber:u,companyId:i,createdBy:f,detailAmount:Number(r),detailType:l,transactionsId:j._id,toCompanyName:d,toIban:p,toSwiftCode:y,transferNumber:m,createdAt:g,updatedAt:g}),I=await v.save();return e.status(200).json({status:"ok",data:{...j.doc(),invoice:I.doc()}})}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]),ee.route(Ht).get([b,async(t,e)=>{const{_id:s}=(null==t?void 0:t.user)||{},{accountId:r}=t.params||{},{invoiceTypes:o,transferTypes:n,types:a,fromDate:i,toDate:u}=t.query||{},p=new Jt(s),y=new Jt(r);if(u&&i&&!d.isAfter(new Date(u),new Date(i)))return e.status(400).json({status:400,error:"Invalid date range"});const l=c.pickBy({accountId:y,createdBy:p,"invoice.detailType":o&&"null"!=o&&"[]"!=o&&{$in:JSON.parse(o)},"transfer.detailType":n&&"null"!=n&&"[]"!=n&&{$in:JSON.parse(n)},type:a&&"null"!=a&&"[]"!=a&&{$in:JSON.parse(a)},createdAt:!!i&&!!u&&{$gte:new Date(i),$lte:new Date(u)}},c.identity);console.log("where",l);try{const t=await Ct.aggregate([{$lookup:{from:"invoices",localField:"_id",foreignField:"transactionsId",as:"invoice"}},{$unwind:{path:"$invoice",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"transfers",localField:"_id",foreignField:"transactionsId",as:"transfer"}},{$unwind:{path:"$transfer",preserveNullAndEmptyArrays:!0}},{$match:l}]).sort({createdAt:-1});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),ee.route(Qt).get([b,async(t,e)=>{const{_id:s}=(null==t?void 0:t.user)||{},{companyId:r}=t.params||{},{invoiceType:o,transferType:n,type:a,fromDate:i,toDate:u}=t.query||{},p=new Gt(s),y=new Gt(r);if(u&&i&&!d.isAfter(new Date(u),new Date(i)))return e.status(400).json({status:400,error:"Invalid date range"});const l=c.pickBy({companyId:y,createdBy:p,"invoice.detailType":o,"transfer.detailType":n,type:a,createdAt:!!i&&!!u&&{$gte:new Date(i),$lte:new Date(u)}},c.identity);console.log("ưherw",l);try{const t=await Ct.aggregate([{$lookup:{from:"invoices",localField:"_id",foreignField:"transactionsId",as:"invoice"}},{$unwind:{path:"$invoice",preserveNullAndEmptyArrays:!0}},{$lookup:{from:"transfers",localField:"_id",foreignField:"transactionsId",as:"transfer"}},{$unwind:{path:"$transfer",preserveNullAndEmptyArrays:!0}},{$match:l},{$sort:{createdAt:-1}}]);return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]),ee.route(te).get([async(t,e)=>{const{invoiceNumber:s}=t.params;try{const t=await xt.findOne({invoiceNumber:s});if(c.isEmpty(t))return e.status(400).json({status:400,error:"Invoice not found!"});const r=new p;r.pipe(e),r.fontSize(18).text("INVOICE",{align:"center"}),r.fontSize(12).text(`Invoice Number: ${s}`),r.fontSize(12).text(`Name: ${t.recipientName}`),r.fontSize(12).text(`Phone: ${t.recipientPhone}`),r.fontSize(12).text(`Email: ${t.recipientEmail}`),r.fontSize(12).text(`Amount: AED ${t.detailAmount}`),r.fontSize(12).text(`Due Date: ${t.detailDueDate}`),r.fontSize(12).text(`Description: ${t.detailType}`),r.end()}catch(t){return e.status(400).json({status:400,error:JSON.stringify(t)})}}]);const se=f({cardType:{type:String,required:!0},nicname:{type:String,required:!0},status:{type:String,required:!0},cardNumber:{type:String,required:!0},accountNumber:{type:String,required:!0},isMain:{type:Boolean,required:!1,default:!1}});se.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var re=n.model("Card",se);const oe=i.z.object({body:i.z.object({cardType:i.z.string(),nicname:i.z.string(),status:i.z.string(),cardNumber:i.z.string(),accountNumber:i.z.string(),isMain:i.z.boolean().optional()})});i.z.object({body:i.z.object({cardType:i.z.string().optional(),nicname:i.z.string().optional(),status:i.z.string().optional(),cardNumber:i.z.string().optional(),accountNumber:i.z.string().optional(),isMain:i.z.boolean().optional()})});const ne="/card",ae="/card",ie="/card/:id",ue="/card/account/:accountNumber",ce=t.Router();ce.route(ae).post([b,g(oe),async(t,e)=>{const{cardType:s,nicname:r,status:o,cardNumber:n,accountNumber:a,isMain:i}=t.body;try{const t=new re({accountNumber:a,cardNumber:n,cardType:s,nicname:r,status:o,isMain:i}),u=await t.save();return e.status(200).json({status:"ok",data:u.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),ce.route(ie).get([b,async(t,e)=>{const{id:s}=t.params;try{const t=await re.findById(s);return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),ce.route(ne).get([b,async(t,e)=>{try{const t=await re.find();return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]),ce.route(ue).get([b,async(t,e)=>{const{accountNumber:s}=t.params;console.log("accountNumber",s);try{const t=await re.find({accountNumber:s});return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]);const de=i.z.object({body:i.z.object({enableBiometric:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional(),mainAccountId:i.z.string().optional()})}),pe=i.z.object({body:i.z.object({enableBiometric:i.z.boolean().optional(),confirmationMethods:i.z.string().optional(),receiveNotificationsForPaymentsAndTransfers:i.z.boolean().optional(),receiveNotificationsForDeposits:i.z.boolean().optional(),receiveNotificationsForOutstandingInvoices:i.z.boolean().optional(),receiveNotificationsForExceedingSetLimits:i.z.boolean().optional(),notificationMethods:i.z.string().optional(),mainAccountId:i.z.string().optional()})}),ye=f({userId:{type:n.Types.ObjectId,ref:"User",required:!0,unique:!0},mainAccountId:{type:n.Types.ObjectId,ref:"Account",required:!1},enableBiometric:{type:Boolean,required:!0,default:!1},confirmationMethods:{type:String,required:!0,default:"BIOMETRIC_ID"},receiveNotificationsForPaymentsAndTransfers:{type:Boolean,required:!0,default:!1},receiveNotificationsForDeposits:{type:Boolean,required:!0,default:!1},receiveNotificationsForOutstandingInvoices:{type:Boolean,required:!0,default:!1},receiveNotificationsForExceedingSetLimits:{type:Boolean,required:!0,default:!1},notificationMethods:{type:String,required:!0,default:"EMAIL"}});ye.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var le=n.model("Setting",ye);const me=n.Types.ObjectId,fe=n.Types.ObjectId,ge="/setting",be="/setting",je="/setting/me",ve="/setting/:id",Ie=t.Router();Ie.route(ge).post([b,g(de),async(t,e)=>{const{confirmationMethods:s,enableBiometric:r,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u,mainAccountId:c}=t.body,{_id:d}=t.user||{};try{const t=new le({userId:d,confirmationMethods:s,enableBiometric:r,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u,mainAccountId:c}),p=await t.save();return e.status(200).json({status:"ok",data:p.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ie.route(be).put([b,g(pe),async(t,e)=>{const{confirmationMethods:s,enableBiometric:r,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u,mainAccountId:c}=t.body,{_id:d}=t.user||{},p=new me(d);try{const t=await le.findOneAndUpdate({userId:p},{$set:{confirmationMethods:s,enableBiometric:r,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u,mainAccountId:c}},{new:!0});if(!t){const t=new le({userId:d,confirmationMethods:s,enableBiometric:r,notificationMethods:o,receiveNotificationsForDeposits:n,receiveNotificationsForExceedingSetLimits:a,receiveNotificationsForOutstandingInvoices:i,receiveNotificationsForPaymentsAndTransfers:u,mainAccountId:c}),p=await t.save();return e.status(200).json({status:"ok",data:p.doc()})}return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ie.route(je).get([b,async(t,e)=>{const{_id:s}=t.user||{},r=new fe(s);try{const t=await le.findOne({userId:r});return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]),Ie.route(ve).get([b,async(t,e)=>{const{id:s}=t.params;try{const t=await le.findById(s);return t?e.status(200).json({status:"ok",data:null==t?void 0:t.doc()}):e.status(400).json({status:400,error:"Setting not found!"})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Ne=i.z.object({body:i.z.object({companyId:i.z.string(),url:i.z.string(),type:i.z.string(),name:i.z.string()})}),we=i.z.object({body:i.z.object({url:i.z.string().optional(),type:i.z.string().optional(),name:i.z.string().optional()})}),he=f({companyId:{type:n.Types.ObjectId,ref:"Company",required:!0},url:{type:String,required:!1},type:{type:String,required:!1},name:{type:String,required:!1}});he.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var ze=n.model("Atachment",he);const qe=n.Types.ObjectId,Se="/atachment",Ae="/atachment/:id",Oe="/atachment/:id",ke="/atachment/compnay/:id",_e=t.Router();_e.route(Se).post([b,g(Ne),async(t,e)=>{const{name:s,type:r,companyId:o,url:n}=t.body;try{const t=new ze({name:s,type:r,companyId:o,url:n}),a=await t.save();return e.status(200).json({status:"ok",data:a.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),_e.route(Ae).post([b,g(we),async(t,e)=>{const{name:s,type:r,url:o}=t.body,{id:n}=t.params;try{const t=await ze.findByIdAndUpdate(n,{$set:{name:s,type:r,url:o}},{new:!0});return t||e.status(400).json({status:400,error:"Atachment not found!"}),e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),_e.route(Oe).delete([b,async(t,e)=>{const{id:s}=t.params;try{const t=await ze.findByIdAndDelete(s,{returnOriginal:!0});return e.status(200).json({status:"ok",data:null==t?void 0:t.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),_e.route(ke).get([b,async(t,e)=>{const{id:s}=t.params,r=new qe(s);try{const t=await ze.find({companyId:r});return e.status(200).json({status:"ok",data:null==t?void 0:t.map((t=>null==t?void 0:t.doc()))})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Te=i.z.object({body:i.z.object({message:i.z.string()})});i.z.object({body:i.z.object({message:i.z.string().optional(),isRead:i.z.boolean().optional()})});const De=f({userId:{type:n.Types.ObjectId,ref:"User",required:!0},message:{type:String,required:!1},isRead:{type:String,required:!1,default:!1},receiverId:{type:n.Types.ObjectId,ref:"User",required:!1}});De.method("doc",(function(){return c.omit(this._doc,["password","__v"])}));var Ee=n.model("Chat",De);const Fe=n.Types.ObjectId,$e="/chat/send",Ue="/chat/me",Pe=t.Router();Pe.route($e).post([b,g(Te),async(t,e)=>{const{message:s,receiverId:r}=t.body,{_id:o}=t.user||{};try{const t=new Ee({userId:o,message:s,receiverId:r}),n=await t.save();return e.status(200).json({status:"ok",data:n.doc()})}catch(t){return e.status(400).json({status:400,error:t})}}]),Pe.route(Ue).get([b,async(t,e)=>{const{_id:s}=t.user||{},r=new Fe(s);try{const t=await Ee.find({userId:r});return e.status(200).json({status:"ok",data:t})}catch(t){return e.status(400).json({status:400,error:t})}}]);const Re=+m("PORT"),Be=m("DB_URL");Re&&Be||(console.error("Missing env!"),process.exit(1));const Ce=t();Ce.use(r("combined")),Ce.use(s({contentSecurityPolicy:!1,frameguard:!1,crossOriginEmbedderPolicy:!1,crossOriginOpenerPolicy:!1,crossOriginResourcePolicy:!1})),Ce.use(e({origin:"*"})),Ce.use(t.json()),Ce.use(t.urlencoded({extended:!1})),Ce.use(t.static(y.join(__dirname+"/public"))),Ce.use("/api",[$,F,Y,st,rt,dt,wt,ht,_t,Rt,ee,ce,Ie,_e,Pe]),Ce.get("*",(async(t,e)=>e.sendFile(y.join(__dirname+"/public/index.html")))),Ce.listen(Re,(()=>{console.log(`Server started on port ${Re}: http://localhost:${Re}`),(({db:t})=>{const e=()=>{n.connect(t,{dbName:"pina_app"}).then((t=>console.info(`Successfully connected to ${t.connection.name}`))).catch((t=>(console.error("Error connecting to database: ",t),process.exit(1))))};e(),n.connection.on("disconnected",e)})({db:Be})})).on("error",(t=>{console.log("ERROR: ",t)})),exports.app=Ce;
